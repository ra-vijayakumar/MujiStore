//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MujiStore.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web;
    using MujiStore.BLL;

    public partial class tblMedia
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public tblMedia()
        {
            this.tblDeployLogs = new HashSet<tblDeployLog>();
            this.tblFeedbacks = new HashSet<tblFeedback>();
            this.tblMediaFormatInfoes = new HashSet<tblMediaFormatInfo>();
            this.tblMediaViewLogs = new HashSet<tblMediaViewLog>();
        }

        public int MediaID { get; set; }

       

        [Required(ErrorMessageResourceType = typeof(MujiStore.Resources.Resource), ErrorMessageResourceName = nameof(MujiStore.Resources.Resource.ModtblMediaTitleDataAnnaValida1))]
        [MaxLength(500,ErrorMessageResourceType = typeof(MujiStore.Resources.Resource), ErrorMessageResourceName = nameof(MujiStore.Resources.Resource.ModtblMediaTitleDataAnnaValida2))]
        [Display(Name = nameof(MujiStore.Resources.Resource.CntVideoDemoVideoTitle), ResourceType = typeof(MujiStore.Resources.Resource))]
        public string Title { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CntVideoDemoVideoDescription), ResourceType = typeof(MujiStore.Resources.Resource))]
        public string Description { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CntVideoDemoVideoCaption), ResourceType = typeof(MujiStore.Resources.Resource))]
        public string Video { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CntVideoDemoVideoThambnail), ResourceType = typeof(MujiStore.Resources.Resource))]
        public string Thumbnail { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CommonIpAddress), ResourceType = typeof(MujiStore.Resources.Resource))]
        public string IpAddress { get; set; }


        public int FolderID { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CntVideoDemoVideoDelFlg), ResourceType = typeof(MujiStore.Resources.Resource))]
        public bool DELFG { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CommonCRTDT), ResourceType = typeof(MujiStore.Resources.Resource))]
        public Nullable<System.DateTime> CRTDT { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CommonCRTCD), ResourceType = typeof(MujiStore.Resources.Resource))]
        public string CRTCD { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CommonUPDDT), ResourceType = typeof(MujiStore.Resources.Resource))]
        public Nullable<System.DateTime> UPDDT { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CommonUPDCD), ResourceType = typeof(MujiStore.Resources.Resource))]
        public string UPDCD { get; set; }

        public string UploadType { get; set; }
        public int ViewCount { get; set; }

        [Display(Name = nameof(MujiStore.Resources.Resource.CntVideoDemoVideoPhysicalDel), ResourceType = typeof(MujiStore.Resources.Resource))]
        public bool PhysicalDELFG { get; set; }
        public string PhysicalDELFGCRTCD { get; set; }
        public Nullable<System.DateTime> PhysicalDELFGCRTDT { get; set; }
        public string PhysicalDELIpAddress { get; set; }
        public Nullable<long> FileSize { get; set; }
        public string Registerer { get; set; }
        public string Accepter { get; set; }
        public Nullable<int> ApprovalStatus { get; set; }
        public Nullable<int> ConvertStatus { get; set; }
        public Nullable<int> Duration { get; set; }

        [Required(ErrorMessage = nameof(MujiStore.Resources.Resource.ModtblMediaTitleDataAnnaValida3))]
        [CustomExtn(ErrorMessage = nameof(MujiStore.Resources.Resource.ModtblMediaTitleDataAnnaValida4), AllowedExtn = "mp4,3g2,3gp,avi,flv,h264,m4v,mkv,mov,mpg,mpeg,rm,swf,vob,wmv,mp3,mp2")]
        public HttpPostedFileBase PostedFile { get; set; }


        public string FolderName { get; set; }
        public bool isSelected { get; set; }
        public string ThumbnailFileName { get; set; }
        public string Comments { get; set; }
        public int ApplicationID { get; set; }
        public Nullable<int> NewApprovalStatus { get; set; }

        public IEnumerable<tblDeployStatu> deployStatus { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<tblDeployLog> tblDeployLogs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<tblFeedback> tblFeedbacks { get; set; }
        public virtual tblFolder tblFolder { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<tblMediaFormatInfo> tblMediaFormatInfoes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<tblMediaViewLog> tblMediaViewLogs { get; set; }
    }
}
